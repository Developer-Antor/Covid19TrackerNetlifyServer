{"version":3,"sources":["Components/Box.js","Components/Table.js","Components/LineGraph.js","App.js","Components/Util.js","index.js"],"names":["Box","title","cases","total","props","Card","onClick","className","CardContent","Typography","color","Table","countries","map","country","options","legend","display","elements","point","radius","maintainAspectRatio","tooltips","mode","intersect","callbacks","label","tooltipItem","data","numeral","value","format","scales","xAxes","type","time","tooltipFormat","yAxes","gridLines","ticks","callback","index","values","LineGraph","casesType","useState","setData","buildChartData","lastDataPoint","chartData","date","newDataPoint","x","y","push","useEffect","a","axios","get","then","res","console","log","fetchData","length","datasets","backgroundColor","borderColor","App","setCountries","setCountry","countryInfo","setCountryInfo","tableData","setTableData","setcasesType","setColor","primaryCountryInfo","response","name","iso2","sortedData","sort","b","sortData","FormControl","Select","variant","onChange","event","countryCode","target","url","MenuItem","style","marginTop","textAlign","e","todayCases","todayRecovered","recovered","todayDeaths","deaths","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2c3b09fe.chunk.js","sourcesContent":["import { Card, CardContent, Typography } from \"@material-ui/core\";\nimport React from \"react\";\nimport \"./Box.css\";\n\nfunction Box({ title, cases, total, ...props }) {\n  return (\n    <Card onClick={props.onClick} className=\"box\">\n      <CardContent>\n        <Typography className=\"title\" color=\"textSecondary\">\n          {title}\n        </Typography>\n        <h2 className=\"cases\">+{cases}</h2>\n        <Typography color=\"textSecondary\" className=\"total\">\n          Total +{total}\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport default Box;\n","import React from \"react\";\nimport \"./Table.css\";\n\nfunction Table({ countries }) {\n  return (\n    <div className=\"table\">\n      {countries.map(({ country, cases }) => {\n        return (\n          <tr>\n            <td>{country}</td>\n            <td>\n              <strong>{cases}</strong>\n            </td>\n          </tr>\n        );\n      })}\n    </div>\n  );\n}\n\nexport default Table;\n","import axios from \"axios\";\nimport numeral from \"numeral\";\nimport React, { useEffect, useState } from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst options = {\n  legend: {\n    display: false,\n  },\n  elements: {\n    point: {\n      radius: 0,\n    },\n  },\n  maintainAspectRatio: false,\n  tooltips: {\n    mode: \"index\",\n    intersect: false,\n    callbacks: {\n      label: function (tooltipItem, data) {\n        return numeral(tooltipItem.value).format(\"+0,0\");\n      },\n    },\n  },\n  scales: {\n    xAxes: [\n      {\n        type: \"time\",\n        time: {\n          format: \"MM/DD/YY\",\n          tooltipFormat: \"ll\",\n        },\n      },\n    ],\n    yAxes: [\n      {\n        gridLines: {\n          display: false,\n        },\n        ticks: {\n          // Include a dollar sign in the ticks\n          callback: function (value, index, values) {\n            return numeral(value).format(\"0a\");\n          },\n        },\n      },\n    ],\n  },\n};\n\nfunction LineGraph({ casesType = \"cases\" }) {\n  const [data, setData] = useState({});\n  const [chartData, setChartData] = useState([]);\n\n  const buildChartData = (data, casesType) => {\n    let chartData = [];\n    let lastDataPoint;\n    for (let date in data[casesType]) {\n      if (lastDataPoint) {\n        let newDataPoint = {\n          x: date,\n          y: data[casesType][date] - lastDataPoint,\n        };\n        chartData.push(newDataPoint);\n      }\n      lastDataPoint = data[casesType][date];\n    }\n\n    return chartData;\n  };\n\n  useEffect(() => {\n    const fetchData = async () => {\n      await axios\n        .get(\"https://disease.sh/v3/covid-19/historical/all?lastdays=120\")\n        .then((res) => {\n          let data = res.data;\n          setData(buildChartData(data, casesType));\n          console.log(buildChartData(data, casesType));\n        });\n    };\n\n    fetchData();\n  }, [casesType]);\n\n  return (\n    <div>\n      {data?.length > 0 && (\n        <Line\n          data={{\n            datasets: [\n              {\n                backgroundColor: \"rgba(204, 16, 52, 0.5)\",\n                borderColor: \"#CC1034\",\n                data: data,\n              },\n            ],\n          }}\n          options={options}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default LineGraph;\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Box from \"./Components/Box\";\nimport axios from \"axios\";\nimport { Card, CardContent } from \"@material-ui/core\";\nimport { FormControl, MenuItem, Select } from \"@material-ui/core\";\nimport Table from \"./Components/Table\";\nimport { sortData } from \"./Components/Util\";\nimport LineGraph from \"./Components/LineGraph\";\nimport \"leaflet/dist/leaflet.css\";\nimport numeral from \"numeral\";\nfunction App() {\n  const [countries, setCountries] = useState([]);\n  const [country, setCountry] = useState(\"worldwide\");\n  const [countryInfo, setCountryInfo] = useState({});\n  const [tableData, setTableData] = useState([]);\n  const [casesType, setcasesType] = useState(\"cases\");\n  const [color, setColor] = useState(\"#fff\");\n\n  useEffect(() => {\n    const primaryCountryInfo = axios\n      .get(\"https://disease.sh/v3/covid-19/all\")\n      .then((res) => {\n        setCountryInfo(res.data);\n        console.log(res.data);\n      });\n    return () => {\n      return primaryCountryInfo;\n    };\n  }, []);\n\n  useEffect(() => {\n    const getCountriesData = axios\n      .get(\"https://disease.sh/v3/covid-19/countries\")\n      .then((response) => {\n        let countryList = response.data;\n        const countries = countryList.map((country) => {\n          return { name: country.country, value: country.countryInfo.iso2 };\n        });\n        const sortedData = sortData(response.data);\n        setCountries(countries);\n        setTableData(sortedData);\n      });\n\n    return getCountriesData;\n  }, []);\n\n  const onCountryChange = (event) => {\n    const countryCode = event.target.value;\n    setCountry(countryCode);\n    const url =\n      countryCode === \"worldwide\"\n        ? \"https://disease.sh/v3/covid-19/all\"\n        : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n    axios.get(url).then((res) => {\n      setCountryInfo(countryCode);\n      setCountryInfo(res.data);\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"app-left\">\n        <div className=\"header\">\n          <h1>COVID-19 TRACKER</h1>\n          <FormControl className=\"header-dropdown\">\n            <Select\n              variant=\"outlined\"\n              onChange={onCountryChange}\n              value={country}\n            >\n              <MenuItem value=\"worldwide\">Worldwide</MenuItem>\n              {countries.map((country) => {\n                return (\n                  <MenuItem value={country.value}>{country.name}</MenuItem>\n                );\n              })}\n            </Select>\n          </FormControl>\n        </div>\n        <div style={{ marginTop: \"1rem\", textAlign: \"center\" }}>\n          Click on any card to see graph below.\n        </div>\n        <div className=\"app-stats\">\n          <Box\n            className=\"mybox1\"\n            onClick={(e) => {\n              setColor(\"#f0eeee\");\n              setcasesType(\"cases\");\n            }}\n            title=\"Coronavirus Cases\"\n            cases={numeral(countryInfo.todayCases).format(\"0a\")}\n            total={numeral(countryInfo.cases).format(\"0.0a\")}\n          ></Box>\n          <Box\n            className=\"mybox2\"\n            onClick={(e) => {\n              setColor(\"#f0eeee\");\n              setcasesType(\"recovered\");\n            }}\n            title=\"Recovered\"\n            cases={numeral(countryInfo.todayRecovered).format(\"0a\")}\n            total={numeral(countryInfo.recovered).format(\"0.0a\")}\n          ></Box>\n          <Box\n            className=\"mybox3\"\n            onClick={(e) => {\n              setColor(\"#f0eeee\");\n              setcasesType(\"deaths\");\n            }}\n            title=\"Deaths\"\n            cases={numeral(countryInfo.todayDeaths).format(\"0a\")}\n            total={numeral(countryInfo.deaths).format(\"0.0a\")}\n          ></Box>\n        </div>\n      </div>\n\n      <Card className=\"app-right\">\n        <CardContent>\n          <h3 className=\"card-title\">Live Cases By Country</h3>\n          <Table countries={tableData}></Table>\n          <h3 className=\"card-title\">Worldwide new {casesType}</h3>\n          <LineGraph casesType={casesType}></LineGraph>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n\nexport default App;\n","export const sortData = (data) => {\n  const sortedData = [...data];\n\n  sortedData.sort((a, b) => {\n    if (a.cases > b.cases) {\n      return -1;\n    } else {\n      return 1;\n    }\n  });\n  return sortedData;\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}